#!/bin/bash

# fc カレントディレクトリ配下のディレクトリを絞り込んで移動
function find_cd () {
  cd "$(find . -type d | peco)"

  return $?
}

# fv カレントディレクトリ配下のファイルを絞り込んでvimで開く
function find_vim () {
  SELECT_FILE=$(find . -type f | peco)

  if [ "$SELECT_FILE" != "" ]; then
    vim $SELECT_FILE
  fi

  return $?
}

# pk プロセスを選択してkill
function peco-pkill () {
  for pid in `ps aux | peco | awk '{ print $2 }'`
  do
    kill $pid
    echo "Killed ${pid}"
  done

  return $?
}

# his bash_historyを選択して実行
function peco-history () {
  SELECTED_COMMAND=$(tail -2000 ~/.bash_history | peco)
  if [ "$SELECTED_COMMAND" != "" ]; then
    echo "exec: ${SELECTED_COMMAND}"
    eval $SELECTED_COMMAND
  fi

  return $?
}

# cd alias function
function cdls () {
  \cd "$@" && ls
  my_prompt

  return $?
}

# my branch
function my_git_branch () {
  git rev-parse --abbrev-ref HEAD

  return $?
}

function current_branch () {
  git branch
  my_prompt

  return $?
}

# git checkout develop or dev
function switch_dev () {
  checkout=`git checkout develop 2>&1 > /dev/null`

  if [ $? = 0 ]; then
    echo "change branch develop."
  else
    echo "develop branch did not exist."
    checkout=`git checkout development 2>&1 > /dev/null`

    if [ $? = 0 ]; then
      echo "change branch development."
    else
      echo "development branch did not exist."
      checkout=`git checkout dev 2>&1 > /dev/null`

      if [ $? = 0 ]; then
        echo "change branch dev."
      else
        echo "can't change branch.\n"
        echo "Probably due to the following error (Please commit your changes or stash them before you switch branches)."
      fi
    fi
  fi
  my_prompt

  return $?
}

# git pull current branch
function g () {
  branch=`git rev-parse --abbrev-ref HEAD`
  if [ "$(uname)" == 'Darwin' ]; then
    rsa_path=`mdfind -name github_rsa | grep -v pub | grep ssh`
  else
    rsa_path=`locate -b -r "^github_rsa$"`
  fi

  expect -c "
    set timeout 10
    spawn git $1 origin $branch
    expect {
      \"Username for 'https://github.com': \" {
        send \"$GITHUB_NAME\n\"
        expect \"Password for 'https://$GITHUB_NAME@github.com': \"
        send \"$GITHUB_PASSWORD\n\"
      }
      \"Enter passphrase for key '$rsa_path':\" {
        send \"$SSH_PASSWORD\n\"
      }
    }

    interact
  "

  return $?
}

# disable keyboard
function disable_keyboard () {
  sudo input-kbd -f $HOME/disable-all.map 3

  return $?
}

# enable keyboard
function enable_keyboard () {
  sudo input-kbd -f $HOME/keyboard_setting/default.map 3

  return $?
}

# web container attach
function web_container_attach() {
  process=`docker-compose ps -q web`

  if [ -n "$process" ]; then
    docker attach $process
  fi

  return $?
}

# prompt
function my_prompt() {
  branch=`git branch 2>&1 > /dev/null`

  if [ $? = 0 ]; then
    branch_name=`git rev-parse --abbrev-ref HEAD`

    export PS1="\[\e[1;36m\]\w\[\e[m\] \[\e[0;35m\]${branch_name}\[\e[m\]* \n% "
  else
    export PS1='\[\e[1;36m\]\w\[\e[m\] \n% '
  fi

  return $?
}

# git checkout branch name
function gcheckout() {
  git checkout $@
  my_prompt

  return $?
}

function switch_master() {
  checkout=`git checkout master 2>&1 > /dev/null`

  if [ $? = 0 ]; then
    echo "change branch master."
  else
    echo "master branch did not exist."
    git checkout main
    if [ $? = 0 ]; then
      echo "change branch main."
    fi
  fi

  my_prompt

  return $?
}
